{"ast":null,"code":"import _objectSpread from\"C:/Users/Windows/.cursor-tutor/roofing-job-board/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// Simple analytics tracking for job interactions\nconst trackJobInteraction=(action,jobData)=>{// Get existing interactions from session storage\nconst existingInteractions=JSON.parse(sessionStorage.getItem('jobInteractions')||'[]');// Add new interaction\nconst interaction=_objectSpread({timestamp:new Date().toISOString(),action,jobId:jobData.id,jobTitle:jobData.job_title},jobData);existingInteractions.push(interaction);// Store in session storage\nsessionStorage.setItem('jobInteractions',JSON.stringify(existingInteractions));// You can also send this to your backend or analytics service\nconsole.log('Job Interaction:',interaction);};export const trackJobView=jobData=>{trackJobInteraction('view_details',jobData);};export const trackJobApplication=(jobData,method)=>{trackJobInteraction('apply_click',_objectSpread(_objectSpread({},jobData),{},{application_method:method}));};","map":{"version":3,"names":["trackJobInteraction","action","jobData","existingInteractions","JSON","parse","sessionStorage","getItem","interaction","_objectSpread","timestamp","Date","toISOString","jobId","id","jobTitle","job_title","push","setItem","stringify","console","log","trackJobView","trackJobApplication","method","application_method"],"sources":["C:/Users/Windows/.cursor-tutor/roofing-job-board/frontend/src/utils/analytics.js"],"sourcesContent":["// Simple analytics tracking for job interactions\r\nconst trackJobInteraction = (action, jobData) => {\r\n  // Get existing interactions from session storage\r\n  const existingInteractions = JSON.parse(sessionStorage.getItem('jobInteractions') || '[]');\r\n  \r\n  // Add new interaction\r\n  const interaction = {\r\n    timestamp: new Date().toISOString(),\r\n    action,\r\n    jobId: jobData.id,\r\n    jobTitle: jobData.job_title,\r\n    ...jobData\r\n  };\r\n  \r\n  existingInteractions.push(interaction);\r\n  \r\n  // Store in session storage\r\n  sessionStorage.setItem('jobInteractions', JSON.stringify(existingInteractions));\r\n  \r\n  // You can also send this to your backend or analytics service\r\n  console.log('Job Interaction:', interaction);\r\n};\r\n\r\nexport const trackJobView = (jobData) => {\r\n  trackJobInteraction('view_details', jobData);\r\n};\r\n\r\nexport const trackJobApplication = (jobData, method) => {\r\n  trackJobInteraction('apply_click', { ...jobData, application_method: method });\r\n}; "],"mappings":"8IAAA;AACA,KAAM,CAAAA,mBAAmB,CAAGA,CAACC,MAAM,CAAEC,OAAO,GAAK,CAC/C;AACA,KAAM,CAAAC,oBAAoB,CAAGC,IAAI,CAACC,KAAK,CAACC,cAAc,CAACC,OAAO,CAAC,iBAAiB,CAAC,EAAI,IAAI,CAAC,CAE1F;AACA,KAAM,CAAAC,WAAW,CAAAC,aAAA,EACfC,SAAS,CAAE,GAAI,CAAAC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CACnCX,MAAM,CACNY,KAAK,CAAEX,OAAO,CAACY,EAAE,CACjBC,QAAQ,CAAEb,OAAO,CAACc,SAAS,EACxBd,OAAO,CACX,CAEDC,oBAAoB,CAACc,IAAI,CAACT,WAAW,CAAC,CAEtC;AACAF,cAAc,CAACY,OAAO,CAAC,iBAAiB,CAAEd,IAAI,CAACe,SAAS,CAAChB,oBAAoB,CAAC,CAAC,CAE/E;AACAiB,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAEb,WAAW,CAAC,CAC9C,CAAC,CAED,MAAO,MAAM,CAAAc,YAAY,CAAIpB,OAAO,EAAK,CACvCF,mBAAmB,CAAC,cAAc,CAAEE,OAAO,CAAC,CAC9C,CAAC,CAED,MAAO,MAAM,CAAAqB,mBAAmB,CAAGA,CAACrB,OAAO,CAAEsB,MAAM,GAAK,CACtDxB,mBAAmB,CAAC,aAAa,CAAAS,aAAA,CAAAA,aAAA,IAAOP,OAAO,MAAEuB,kBAAkB,CAAED,MAAM,EAAE,CAAC,CAChF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}