{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Windows\\\\.cursor-tutor\\\\roofing-job-board\\\\frontend\\\\src\\\\components\\\\JobCard.js\";\nimport React from 'react';\nimport './JobCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobCard = ({\n  job,\n  onClick\n}) => {\n  // Function to strip HTML tags and get plain text\n  const stripHtml = html => {\n    const tmp = document.createElement('div');\n    tmp.innerHTML = html;\n    return tmp.textContent || tmp.innerText || '';\n  };\n\n  // Get a preview of the description (first 150 chars, without HTML tags)\n  const getDescriptionPreview = () => {\n    const plainText = stripHtml(job.description || '');\n    return plainText.substring(0, 150) + (plainText.length > 150 ? '...' : '');\n  };\n\n  // Add this function to format the job function text\n  const formatJobFunction = jobFunction => {\n    if (!jobFunction) return '';\n    return jobFunction.charAt(0).toUpperCase() + jobFunction.slice(1).toLowerCase();\n  };\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    const now = new Date();\n    const diffTime = Math.abs(now - date);\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    if (diffDays === 1) return 'Posted yesterday';\n    if (diffDays < 7) return `Posted ${diffDays} days ago`;\n    if (diffDays < 30) return `Posted ${Math.floor(diffDays / 7)} weeks ago`;\n    return `Posted ${Math.floor(diffDays / 30)} months ago`;\n  };\n  const formatEmploymentType = type => {\n    if (!type) return '';\n    return type.split('-').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"job-card\",\n    onClick: () => onClick(job),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"job-card-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title-section\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"job-title\",\n          children: job.job_title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), job.posted_date && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"posted-date\",\n        children: formatDate(job.posted_date)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"job-info\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"job-location-salary\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"location\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-map-marker-alt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), \" \", job.location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), job.salary_range && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"salary\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-dollar-sign\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), \" \", job.salary_range]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"job-tags\",\n      children: [job.employment_type && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"tag employment-type\",\n        children: formatEmploymentType(job.employment_type)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), job.remote_type && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"tag remote-type\",\n        children: formatEmploymentType(job.remote_type)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), job.job_function && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"tag job-function\",\n        children: formatJobFunction(job.job_function)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-arrow\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-chevron-right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"job-card-content\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"job-description-preview\",\n        children: getDescriptionPreview()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_c = JobCard;\nexport default JobCard;\nvar _c;\n$RefreshReg$(_c, \"JobCard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","JobCard","job","onClick","stripHtml","html","tmp","document","createElement","innerHTML","textContent","innerText","getDescriptionPreview","plainText","description","substring","length","formatJobFunction","jobFunction","charAt","toUpperCase","slice","toLowerCase","formatDate","dateString","date","Date","now","diffTime","Math","abs","diffDays","ceil","floor","formatEmploymentType","type","split","map","word","join","className","children","job_title","fileName","_jsxFileName","lineNumber","columnNumber","posted_date","location","salary_range","employment_type","remote_type","job_function","_c","$RefreshReg$"],"sources":["C:/Users/Windows/.cursor-tutor/roofing-job-board/frontend/src/components/JobCard.js"],"sourcesContent":["import React from 'react';\nimport './JobCard.css';\n\nconst JobCard = ({ job, onClick }) => {\n  // Function to strip HTML tags and get plain text\n  const stripHtml = (html) => {\n    const tmp = document.createElement('div');\n    tmp.innerHTML = html;\n    return tmp.textContent || tmp.innerText || '';\n  };\n\n  // Get a preview of the description (first 150 chars, without HTML tags)\n  const getDescriptionPreview = () => {\n    const plainText = stripHtml(job.description || '');\n    return plainText.substring(0, 150) + (plainText.length > 150 ? '...' : '');\n  };\n\n  // Add this function to format the job function text\n  const formatJobFunction = (jobFunction) => {\n    if (!jobFunction) return '';\n    return jobFunction.charAt(0).toUpperCase() + jobFunction.slice(1).toLowerCase();\n  };\n\n  const formatDate = (dateString) => {\n    const date = new Date(dateString);\n    const now = new Date();\n    const diffTime = Math.abs(now - date);\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n\n    if (diffDays === 1) return 'Posted yesterday';\n    if (diffDays < 7) return `Posted ${diffDays} days ago`;\n    if (diffDays < 30) return `Posted ${Math.floor(diffDays / 7)} weeks ago`;\n    return `Posted ${Math.floor(diffDays / 30)} months ago`;\n  };\n\n  const formatEmploymentType = (type) => {\n    if (!type) return '';\n    return type.split('-').map(word => \n      word.charAt(0).toUpperCase() + word.slice(1)\n    ).join(' ');\n  };\n\n  return (\n    <div className=\"job-card\" onClick={() => onClick(job)}>\n      <div className=\"job-card-header\">\n        <div className=\"title-section\">\n          <h3 className=\"job-title\">{job.job_title}</h3>\n        </div>\n        {job.posted_date && (\n          <span className=\"posted-date\">{formatDate(job.posted_date)}</span>\n        )}\n      </div>\n\n      <div className=\"job-info\">\n        <div className=\"job-location-salary\">\n          <p className=\"location\">\n            <i className=\"fas fa-map-marker-alt\"></i> {job.location}\n          </p>\n          {job.salary_range && (\n            <p className=\"salary\">\n              <i className=\"fas fa-dollar-sign\"></i> {job.salary_range}\n            </p>\n          )}\n        </div>\n      </div>\n\n      <div className=\"job-tags\">\n        {job.employment_type && (\n          <span className=\"tag employment-type\">\n            {formatEmploymentType(job.employment_type)}\n          </span>\n        )}\n        {job.remote_type && (\n          <span className=\"tag remote-type\">\n            {formatEmploymentType(job.remote_type)}\n          </span>\n        )}\n        {job.job_function && (\n          <span className=\"tag job-function\">\n            {formatJobFunction(job.job_function)}\n          </span>\n        )}\n      </div>\n      \n      <div className=\"card-arrow\">\n        <i className=\"fas fa-chevron-right\"></i>\n      </div>\n\n      <div className=\"job-card-content\">\n        <p className=\"job-description-preview\">{getDescriptionPreview()}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default JobCard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}