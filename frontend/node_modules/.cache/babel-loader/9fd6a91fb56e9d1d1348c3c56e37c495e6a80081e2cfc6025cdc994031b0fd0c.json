{"ast":null,"code":"// src/components/LocationSelector.js\nimport React,{useState,useEffect}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const LocationSelector=_ref=>{let{onLocationChange}=_ref;const[zipCode,setZipCode]=useState('');const[radius,setRadius]=useState('150');const[isLoadingLocation,setIsLoadingLocation]=useState(true);useEffect(()=>{const getUserLocation=async()=>{try{// Get user's coordinates\nconst position=await new Promise((resolve,reject)=>{navigator.geolocation.getCurrentPosition(resolve,reject);});const{latitude,longitude}=position.coords;// Use Nominatim for reverse geocoding (free service)\nconst response=await fetch(\"https://nominatim.openstreetmap.org/reverse?format=json&lat=\".concat(latitude,\"&lon=\").concat(longitude,\"&addressdetails=1\"),{headers:{'User-Agent':'RoofingJobBoard/1.0'}});if(!response.ok){throw new Error('Failed to get location details');}const data=await response.json();const userZip=data.address.postcode;if(userZip){setZipCode(userZip);// Trigger initial search with user's location\nonLocationChange({zipCode:userZip,radius:parseFloat(radius)});}}catch(error){console.error('Error getting user location:',error);// Silently fail - user can still enter ZIP manually\n}finally{setIsLoadingLocation(false);}};getUserLocation();},[radius,onLocationChange]);const handleSubmit=e=>{e.preventDefault();onLocationChange(zipCode.trim()?{zipCode,radius:parseFloat(radius)}:null);};return/*#__PURE__*/_jsx(\"div\",{className:\"location-selector\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:isLoadingLocation?\"Getting your location...\":\"Enter ZIP code (optional)\",value:zipCode,onChange:e=>setZipCode(e.target.value),pattern:\"[0-9]{5}|^$\",title:\"Please enter a valid 5-digit ZIP code or leave empty to show all jobs\",disabled:isLoadingLocation}),/*#__PURE__*/_jsxs(\"select\",{value:radius,onChange:e=>setRadius(e.target.value),disabled:isLoadingLocation,children:[/*#__PURE__*/_jsx(\"option\",{value:\"25\",children:\"Within 25 miles\"}),/*#__PURE__*/_jsx(\"option\",{value:\"50\",children:\"Within 50 miles\"}),/*#__PURE__*/_jsx(\"option\",{value:\"100\",children:\"Within 100 miles\"}),/*#__PURE__*/_jsx(\"option\",{value:\"150\",children:\"Within 150 miles\"}),/*#__PURE__*/_jsx(\"option\",{value:\"200\",children:\"Within 200 miles\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:isLoadingLocation,children:isLoadingLocation?'Getting Location...':zipCode.trim()?'Search Jobs':'Show All Jobs'})]})});};export default LocationSelector;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","LocationSelector","_ref","onLocationChange","zipCode","setZipCode","radius","setRadius","isLoadingLocation","setIsLoadingLocation","getUserLocation","position","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","latitude","longitude","coords","response","fetch","concat","headers","ok","Error","data","json","userZip","address","postcode","parseFloat","error","console","handleSubmit","e","preventDefault","trim","className","children","onSubmit","type","placeholder","value","onChange","target","pattern","title","disabled"],"sources":["C:/Users/Windows/.cursor-tutor/roofing-job-board/frontend/src/components/LocationSelector.js"],"sourcesContent":["// src/components/LocationSelector.js\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst LocationSelector = ({ onLocationChange }) => {\r\n    const [zipCode, setZipCode] = useState('');\r\n    const [radius, setRadius] = useState('150');\r\n    const [isLoadingLocation, setIsLoadingLocation] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const getUserLocation = async () => {\r\n            try {\r\n                // Get user's coordinates\r\n                const position = await new Promise((resolve, reject) => {\r\n                    navigator.geolocation.getCurrentPosition(resolve, reject);\r\n                });\r\n\r\n                const { latitude, longitude } = position.coords;\r\n\r\n                // Use Nominatim for reverse geocoding (free service)\r\n                const response = await fetch(\r\n                    `https://nominatim.openstreetmap.org/reverse?format=json&lat=${latitude}&lon=${longitude}&addressdetails=1`,\r\n                    {\r\n                        headers: {\r\n                            'User-Agent': 'RoofingJobBoard/1.0'\r\n                        }\r\n                    }\r\n                );\r\n                \r\n                if (!response.ok) {\r\n                    throw new Error('Failed to get location details');\r\n                }\r\n\r\n                const data = await response.json();\r\n                const userZip = data.address.postcode;\r\n                \r\n                if (userZip) {\r\n                    setZipCode(userZip);\r\n                    // Trigger initial search with user's location\r\n                    onLocationChange({ zipCode: userZip, radius: parseFloat(radius) });\r\n                }\r\n            } catch (error) {\r\n                console.error('Error getting user location:', error);\r\n                // Silently fail - user can still enter ZIP manually\r\n            } finally {\r\n                setIsLoadingLocation(false);\r\n            }\r\n        };\r\n\r\n        getUserLocation();\r\n    }, [radius, onLocationChange]);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        onLocationChange(zipCode.trim() ? { zipCode, radius: parseFloat(radius) } : null);\r\n    };\r\n\r\n    return (\r\n        <div className=\"location-selector\">\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder={isLoadingLocation ? \"Getting your location...\" : \"Enter ZIP code (optional)\"}\r\n                    value={zipCode}\r\n                    onChange={e => setZipCode(e.target.value)}\r\n                    pattern=\"[0-9]{5}|^$\"\r\n                    title=\"Please enter a valid 5-digit ZIP code or leave empty to show all jobs\"\r\n                    disabled={isLoadingLocation}\r\n                />\r\n                <select\r\n                    value={radius}\r\n                    onChange={e => setRadius(e.target.value)}\r\n                    disabled={isLoadingLocation}\r\n                >\r\n                    <option value=\"25\">Within 25 miles</option>\r\n                    <option value=\"50\">Within 50 miles</option>\r\n                    <option value=\"100\">Within 100 miles</option>\r\n                    <option value=\"150\">Within 150 miles</option>\r\n                    <option value=\"200\">Within 200 miles</option>\r\n                </select>\r\n                <button type=\"submit\" disabled={isLoadingLocation}>\r\n                    {isLoadingLocation ? 'Getting Location...' : (zipCode.trim() ? 'Search Jobs' : 'Show All Jobs')}\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LocationSelector;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}