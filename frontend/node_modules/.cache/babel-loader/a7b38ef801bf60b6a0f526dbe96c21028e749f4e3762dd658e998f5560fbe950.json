{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Windows\\\\.cursor-tutor\\\\roofing-job-board\\\\frontend\\\\src\\\\app.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport JobList from './components/JobList';\nimport Filters from './components/Filters';\nimport LocationSelector from './components/LocationSelector';\nimport Header from './components/Header';\nimport JobModal from './components/JobModal';\nimport PostJobForm from './components/PostJobForm';\nimport './app.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = ({\n  jobs,\n  filteredJobs,\n  handleFilterChange,\n  handleLocationChange,\n  handleJobClick,\n  error\n}) => /*#__PURE__*/_jsxDEV(\"main\", {\n  className: \"main-content\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-section\",\n    children: [/*#__PURE__*/_jsxDEV(LocationSelector, {\n      onLocationChange: handleLocationChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Filters, {\n      onFilterChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"jobs-container\",\n    children: error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Unable to connect to job server\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please try again later. The server might be temporarily down.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this) : filteredJobs.length > 0 ? /*#__PURE__*/_jsxDEV(JobList, {\n      jobs: filteredJobs,\n      onJobClick: handleJobClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-jobs\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"No jobs available at the moment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please check back later or try adjusting your search criteria.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 13,\n  columnNumber: 5\n}, this);\n_c = HomePage;\nconst App = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [filteredJobs, setFilteredJobs] = useState([]);\n  const [selectedJob, setSelectedJob] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchJobs = async () => {\n      try {\n        const response = await fetch('http://localhost:8000/api/v1/jobs');\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setJobs(data);\n        setFilteredJobs(data);\n        setError(null); // Clear any previous errors\n      } catch (error) {\n        console.error('Error fetching jobs:', error);\n        setError(error.message);\n        // Set empty arrays so the app can still function\n        setJobs([]);\n        setFilteredJobs([]);\n      }\n    };\n    fetchJobs();\n  }, []);\n  const handleFilterChange = filter => {\n    const newFilteredJobs = jobs.filter(job => job.type === filter);\n    setFilteredJobs(newFilteredJobs);\n  };\n  const handleLocationChange = location => {\n    console.log(location);\n  };\n  const handleJobClick = job => {\n    setSelectedJob(job);\n  };\n  const handleCloseModal = () => {\n    setSelectedJob(null);\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(HomePage, {\n            jobs: jobs,\n            filteredJobs: filteredJobs,\n            handleFilterChange: handleFilterChange,\n            handleLocationChange: handleLocationChange,\n            handleJobClick: handleJobClick,\n            error: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/post-job\",\n          element: /*#__PURE__*/_jsxDEV(PostJobForm, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 54\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), selectedJob && /*#__PURE__*/_jsxDEV(JobModal, {\n        job: selectedJob,\n        onClose: handleCloseModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"7OuEBHsDop8vXu/WMtdyA5NhQpk=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"HomePage\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","JobList","Filters","LocationSelector","Header","JobModal","PostJobForm","jsxDEV","_jsxDEV","HomePage","jobs","filteredJobs","handleFilterChange","handleLocationChange","handleJobClick","error","className","children","onLocationChange","fileName","_jsxFileName","lineNumber","columnNumber","onFilterChange","length","onJobClick","_c","App","_s","setJobs","setFilteredJobs","selectedJob","setSelectedJob","setError","fetchJobs","response","fetch","ok","Error","status","data","json","console","message","filter","newFilteredJobs","job","type","location","log","handleCloseModal","path","element","onClose","_c2","$RefreshReg$"],"sources":["C:/Users/Windows/.cursor-tutor/roofing-job-board/frontend/src/app.js"],"sourcesContent":["// src/App.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport JobList from './components/JobList';\r\nimport Filters from './components/Filters';\r\nimport LocationSelector from './components/LocationSelector';\r\nimport Header from './components/Header';\r\nimport JobModal from './components/JobModal';\r\nimport PostJobForm from './components/PostJobForm';\r\nimport './app.css';\r\n\r\nconst HomePage = ({ jobs, filteredJobs, handleFilterChange, handleLocationChange, handleJobClick, error }) => (\r\n    <main className=\"main-content\">\r\n        <div className=\"search-section\">\r\n            <LocationSelector onLocationChange={handleLocationChange} />\r\n            <Filters onFilterChange={handleFilterChange} />\r\n        </div>\r\n        <div className=\"jobs-container\">\r\n            {error ? (\r\n                <div className=\"error-message\">\r\n                    <h3>Unable to connect to job server</h3>\r\n                    <p>Please try again later. The server might be temporarily down.</p>\r\n                </div>\r\n            ) : filteredJobs.length > 0 ? (\r\n                <JobList jobs={filteredJobs} onJobClick={handleJobClick} />\r\n            ) : (\r\n                <div className=\"no-jobs\">\r\n                    <h3>No jobs available at the moment</h3>\r\n                    <p>Please check back later or try adjusting your search criteria.</p>\r\n                </div>\r\n            )}\r\n        </div>\r\n    </main>\r\n);\r\n\r\nconst App = () => {\r\n    const [jobs, setJobs] = useState([]);\r\n    const [filteredJobs, setFilteredJobs] = useState([]);\r\n    const [selectedJob, setSelectedJob] = useState(null);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchJobs = async () => {\r\n            try {\r\n                const response = await fetch('http://localhost:8000/api/v1/jobs');\r\n                if (!response.ok) {\r\n                    throw new Error(`HTTP error! status: ${response.status}`);\r\n                }\r\n                const data = await response.json();\r\n                setJobs(data);\r\n                setFilteredJobs(data);\r\n                setError(null); // Clear any previous errors\r\n            } catch (error) {\r\n                console.error('Error fetching jobs:', error);\r\n                setError(error.message);\r\n                // Set empty arrays so the app can still function\r\n                setJobs([]);\r\n                setFilteredJobs([]);\r\n            }\r\n        };\r\n\r\n        fetchJobs();\r\n    }, []);\r\n\r\n    const handleFilterChange = (filter) => {\r\n        const newFilteredJobs = jobs.filter(job => job.type === filter);\r\n        setFilteredJobs(newFilteredJobs);\r\n    };\r\n\r\n    const handleLocationChange = (location) => {\r\n        console.log(location);\r\n    };\r\n\r\n    const handleJobClick = (job) => {\r\n        setSelectedJob(job);\r\n    };\r\n\r\n    const handleCloseModal = () => {\r\n        setSelectedJob(null);\r\n    };\r\n\r\n    return (\r\n        <Router>\r\n            <div className=\"app-container\">\r\n                <Header />\r\n                <Routes>\r\n                    <Route path=\"/\" element={\r\n                        <HomePage \r\n                            jobs={jobs}\r\n                            filteredJobs={filteredJobs}\r\n                            handleFilterChange={handleFilterChange}\r\n                            handleLocationChange={handleLocationChange}\r\n                            handleJobClick={handleJobClick}\r\n                            error={error}\r\n                        />\r\n                    } />\r\n                    <Route path=\"/post-job\" element={<PostJobForm />} />\r\n                </Routes>\r\n                {selectedJob && <JobModal job={selectedJob} onClose={handleCloseModal} />}\r\n            </div>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}