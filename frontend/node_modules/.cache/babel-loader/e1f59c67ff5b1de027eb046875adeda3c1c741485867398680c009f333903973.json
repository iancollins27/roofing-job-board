{"ast":null,"code":"import React from'react';import'./JobCard.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const JobCard=_ref=>{let{job,onClick}=_ref;// Function to strip HTML tags and get plain text\nconst stripHtml=html=>{const tmp=document.createElement('div');tmp.innerHTML=html;return tmp.textContent||tmp.innerText||'';};// Get a preview of the description (first 150 chars, without HTML tags)\nconst getDescriptionPreview=()=>{const plainText=stripHtml(job.description||'');return plainText.substring(0,150)+(plainText.length>150?'...':'');};// Add this function to format the job function text\nconst formatJobFunction=jobFunction=>{if(!jobFunction)return'';return jobFunction.charAt(0).toUpperCase()+jobFunction.slice(1).toLowerCase();};const formatDate=dateString=>{const date=new Date(dateString);const now=new Date();const diffTime=Math.abs(now-date);const diffDays=Math.ceil(diffTime/(1000*60*60*24));if(diffDays===1)return'Posted yesterday';if(diffDays<7)return\"Posted \".concat(diffDays,\" days ago\");if(diffDays<30)return\"Posted \".concat(Math.floor(diffDays/7),\" weeks ago\");return\"Posted \".concat(Math.floor(diffDays/30),\" months ago\");};const formatEmploymentType=type=>{if(!type)return'';return type.split('-').map(word=>word.charAt(0).toUpperCase()+word.slice(1)).join(' ');};return/*#__PURE__*/_jsxs(\"div\",{className:\"job-card\",onClick:()=>onClick(job),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"job-card-header\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"job-title\",children:job.job_title}),job.posted_date&&/*#__PURE__*/_jsx(\"span\",{className:\"posted-date\",children:formatDate(job.posted_date)})]}),/*#__PURE__*/_jsx(\"div\",{className:\"job-info\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"job-location-salary\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"location\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-map-marker-alt\"}),\" \",job.location]}),job.salary_range&&/*#__PURE__*/_jsxs(\"p\",{className:\"salary\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-dollar-sign\"}),\" \",job.salary_range]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"job-tags\",children:[job.employment_type&&/*#__PURE__*/_jsx(\"span\",{className:\"tag employment-type\",children:formatEmploymentType(job.employment_type)}),job.remote_type&&/*#__PURE__*/_jsx(\"span\",{className:\"tag remote-type\",children:formatEmploymentType(job.remote_type)}),job.job_function&&/*#__PURE__*/_jsx(\"span\",{className:\"tag job-function\",children:formatJobFunction(job.job_function)})]}),/*#__PURE__*/_jsx(\"div\",{className:\"card-arrow\",children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-chevron-right\"})})]});};export default JobCard;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","JobCard","_ref","job","onClick","stripHtml","html","tmp","document","createElement","innerHTML","textContent","innerText","getDescriptionPreview","plainText","description","substring","length","formatJobFunction","jobFunction","charAt","toUpperCase","slice","toLowerCase","formatDate","dateString","date","Date","now","diffTime","Math","abs","diffDays","ceil","concat","floor","formatEmploymentType","type","split","map","word","join","className","children","job_title","posted_date","location","salary_range","employment_type","remote_type","job_function"],"sources":["C:/Users/Windows/.cursor-tutor/roofing-job-board/frontend/src/components/JobCard.js"],"sourcesContent":["import React from 'react';\r\nimport './JobCard.css';\r\n\r\nconst JobCard = ({ job, onClick }) => {\r\n  // Function to strip HTML tags and get plain text\r\n  const stripHtml = (html) => {\r\n    const tmp = document.createElement('div');\r\n    tmp.innerHTML = html;\r\n    return tmp.textContent || tmp.innerText || '';\r\n  };\r\n\r\n  // Get a preview of the description (first 150 chars, without HTML tags)\r\n  const getDescriptionPreview = () => {\r\n    const plainText = stripHtml(job.description || '');\r\n    return plainText.substring(0, 150) + (plainText.length > 150 ? '...' : '');\r\n  };\r\n\r\n  // Add this function to format the job function text\r\n  const formatJobFunction = (jobFunction) => {\r\n    if (!jobFunction) return '';\r\n    return jobFunction.charAt(0).toUpperCase() + jobFunction.slice(1).toLowerCase();\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    const now = new Date();\r\n    const diffTime = Math.abs(now - date);\r\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n\r\n    if (diffDays === 1) return 'Posted yesterday';\r\n    if (diffDays < 7) return `Posted ${diffDays} days ago`;\r\n    if (diffDays < 30) return `Posted ${Math.floor(diffDays / 7)} weeks ago`;\r\n    return `Posted ${Math.floor(diffDays / 30)} months ago`;\r\n  };\r\n\r\n  const formatEmploymentType = (type) => {\r\n    if (!type) return '';\r\n    return type.split('-').map(word => \r\n      word.charAt(0).toUpperCase() + word.slice(1)\r\n    ).join(' ');\r\n  };\r\n\r\n  return (\r\n    <div className=\"job-card\" onClick={() => onClick(job)}>\r\n      <div className=\"job-card-header\">\r\n        <h3 className=\"job-title\">{job.job_title}</h3>\r\n        {job.posted_date && (\r\n          <span className=\"posted-date\">{formatDate(job.posted_date)}</span>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"job-info\">\r\n        <div className=\"job-location-salary\">\r\n          <p className=\"location\">\r\n            <i className=\"fas fa-map-marker-alt\"></i> {job.location}\r\n          </p>\r\n          {job.salary_range && (\r\n            <p className=\"salary\">\r\n              <i className=\"fas fa-dollar-sign\"></i> {job.salary_range}\r\n            </p>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"job-tags\">\r\n        {job.employment_type && (\r\n          <span className=\"tag employment-type\">\r\n            {formatEmploymentType(job.employment_type)}\r\n          </span>\r\n        )}\r\n        {job.remote_type && (\r\n          <span className=\"tag remote-type\">\r\n            {formatEmploymentType(job.remote_type)}\r\n          </span>\r\n        )}\r\n        {job.job_function && (\r\n          <span className=\"tag job-function\">\r\n            {formatJobFunction(job.job_function)}\r\n          </span>\r\n        )}\r\n      </div>\r\n      \r\n      <div className=\"card-arrow\">\r\n        <i className=\"fas fa-chevron-right\"></i>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobCard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}